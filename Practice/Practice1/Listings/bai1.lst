C51 COMPILER V9.60.0.0   BAI1                                                              12/04/2021 15:35:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BAI1
OBJECT MODULE PLACED IN .\Objects\bai1.obj
COMPILER INVOKED BY: E:\Long\Keil5\C51\BIN\C51.EXE bai1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\b
                    -ai1.lst) TABS(2) OBJECT(.\Objects\bai1.obj)

line level    source

   1          #include "reg51.h"
   2          
   3          void delay(unsigned int time){
   4   1          while(time--){};
   5   1      }
   6          
   7          void blink_all(){
   8   1          P2= 0xFF;
   9   1          delay(50000);
  10   1          P2=0x00;
  11   1          delay(50000);
  12   1          P2=0xFF;
  13   1          delay(50000);
  14   1      }
  15          
  16          void blink_cycle_left_to_right(){
  17   1          unsigned char i;
  18   1          P2=0xFF;
  19   1          for(i=0;i<8;++i){
  20   2              P2<<=1;
  21   2              if(i>0) P2+=1;
  22   2              delay(50000);
  23   2          }
  24   1          P2=0xFF;
  25   1      }
  26          
  27          void blink_cycle_right_to_left(){
  28   1          unsigned int i;
  29   1          P2=0xFF;
  30   1          for(i=0;i<8;++i){
  31   2              P2>>=1;
  32   2              if(i>0) P2+=1<<7;
  33   2              delay(50000);
  34   2          }
  35   1          P2=0xFF;
  36   1      }
  37          
  38          void blink_pair_cycle(){
  39   1          unsigned int i;
  40   1          P2=0xFF;
  41   1          P2<<=2;
  42   1          for(i=0;i<6;++i){
  43   2              P2<<=1;
  44   2              P2+=1;
  45   2              delay(50000);
  46   2          }
  47   1          P2=0xFF;
  48   1          delay(50000);
  49   1          P2>>=2;
  50   1          delay(50000);
  51   1          for (i=0;i<6;++i){
  52   2              P2>>=1;
  53   2              P2+=1<<7;
  54   2              delay(50000);
C51 COMPILER V9.60.0.0   BAI1                                                              12/04/2021 15:35:45 PAGE 2   

  55   2          }
  56   1          P2=0xFF;
  57   1      }
  58          
  59          void blink_accumulative(){
  60   1          unsigned char sta = 0xFF;
  61   1          unsigned char tmp=0xFF;
  62   1          unsigned int i,j,k;
  63   1          P2=0xFF;
  64   1          for (i=0;i<8;++i){
  65   2              j=8-i;
  66   2              sta=P2;
  67   2              for (k=0;k<j;++k){
  68   3                  tmp<<=1;
  69   3                  if(k>0) tmp+=1;
  70   3                  P2=tmp&sta;
  71   3                  delay(50000);
  72   3              }
  73   2          }
  74   1          tmp=P2;
  75   1          for (i=0;i<8;++i){
  76   2              tmp>>=1;
  77   2              tmp+=(1<<7);
  78   2              P2|=tmp;
  79   2              delay(50000);
  80   2          }
  81   1      }
  82          
  83          void bumping() {
  84   1          unsigned char i;
  85   1          unsigned char left = 0xFF;
  86   1          unsigned char right = 0xFF;
  87   1          P2 = 0xFF;
  88   1          for (i = 0; i < 8; i++) {
  89   2              left >>= 1;
  90   2              right <<= 1;
  91   2              if (i > 0) {
  92   3                  left += 1 << 7;
  93   3                  right += 1;
  94   3              }
  95   2              P2 = left & right;
  96   2              delay(50000);
  97   2          }
  98   1          P2 = 0xFF;
  99   1      }
 100          
 101          
 102          void main(){
 103   1          while(1){
 104   2              blink_all();
 105   2              delay(50000);
 106   2              blink_cycle_left_to_right();
 107   2              delay(50000);
 108   2              blink_cycle_right_to_left();
 109   2              delay(50000);
 110   2              blink_pair_cycle();
 111   2              delay(50000);
 112   2              blink_accumulative();
 113   2              bumping();
 114   2              delay(50000);
 115   2          }
 116   1      }
C51 COMPILER V9.60.0.0   BAI1                                                              12/04/2021 15:35:45 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    395    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
